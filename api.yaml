openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MICHELLEALABI/hotelArtichaut/1.0.0
info:
  version: "1.0.0"
  title: "API sécurisée pour l'administration  du site de l'hôtel Artichaut"
  description: >-
    Possibilité de modifier, supprimer ou créer de nouveaux contenus sur la landing page de l'hôtel Artichaut. 
  contact:
    # Un commentaire
    name: Team name 
    email: you@your-company.com
  
security:
  - password:
      - read
      - write
tags: 
  - name: hero
    description: Administration de la section Hero
  - name: video_section
    description: Administration de la section Vidéo
  - name: rooms
    description: Administration de la section Chambres
  - name: avantages
    description: Administration de la section Avantages
  - name: reviews
    description: Administration de la section Avis
  - name: news
    description: Administration de la section Actualités
  - name: footer
    description: Administration du footer
paths:
  /home/hero:
    get:
      tags:
        - hero
      summary: Récupération des éléments du Hero
      description: Affiche le Hero
      responses:
        '200':
          description: Hero affiché
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HeroList'
    
    post:
      tags:
        - hero
      summary: Création d'un nouvel hero
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeroList'
      responses:
        '200':
          description: 'Le hero a bien été créé'
        '400':
          description: 'La syntaxe de la requête est erronée.'
  /home/hero/{id}:
    put:
      tags:
        - hero
      summary: Modification d'un hero
      description: Modification d'un hero spécifique
      parameters:
        - in: path
          name: id
          required: true
          description: ID du hero à modifier
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: 'Le hero a bien été créé'
        '400':
          description: 'La syntaxe de la requête est erronée.'
        '404':
          description: 'Ressource non trouvée.'  
            
            
  /home/video_section:
    get:
      tags:
        - video_section
      summary: Récupération des éléments de la section vidéo
      description: >-
        Liste des sections vidéo
      responses:
        '200':
          description: Section vidéo affichées
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoSectionList'  
  
    post:
        tags:
          - video_section
        summary: Création d'une nouvelle section Vidéo
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoSectionList'
        responses:
          '200':
            description: 'La section vidéo a bien été créé'
          '400':
            description: 'La syntaxe de la requête est erronée.'
  /home/video_section/{id}:
    put:
      tags:
        - video_section
      summary: Modification d'une section vidéo
      description: Modification d'une section vidéo spécifique
      parameters:
        - in: path
          name: id
          required: true
          description: ID de la section vidéo à modifier
          schema:
            type: integer
            example: 3
      responses:
        '200':
          description: 'Le hero a bien été créé'
        '400':
          description: 'La syntaxe de la requête est erronée.'
        '404':
          description: 'Ressource non trouvée.' 
  
  /home/rooms:
    get:
      tags:
        - rooms
      summary: Récupération des éléments de la section Rooms
      description: >-
        Liste des éléments de la section Rooms
      responses:
        '200':
          description: Elements de la section Rooms affichés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomsList'
    
    post:
      tags:
        - rooms
      summary: Création d'une nouvelle section Rooms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomsList'
      responses:
        '200':
          description: 'Le hero a bien été créé'
        '400':
          description: 'La syntaxe de la requête est erronée.'
  /home/hero/{id}:
    put:
      tags:
        - hero
      summary: Modification d'un hero
      description: Modification d'un hero spécifique
      parameters:
        - in: path
          name: id
          required: true
          description: ID du hero à modifier
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: 'Le hero a bien été créé'
        '400':
          description: 'La syntaxe de la requête est erronée.'
        '404':
          description: 'Ressource non trouvée.'  
  
components:
  schemas: 
    HeroList:
      description: Modèle contenant les éléments du hero
      type: object
      required:
        - id
        - title
        - subtitle
        - media_id
        - title_english
        - subtitle_english
       
      properties:
        id:
          type: integer
          example: 5
        title:
          type: string
          example: Titre de page
        subtitle:
          type: string
          example: Le sous titre de ma page
        media_id:
          type: integer
          example: 3
        title_english:
          type: string
          example: The Title
        subtitle_english:
          type: string
          example: The subtitle of may page
        
          
    VideoSectionList:
      description: Modèle contenant les éléments de la section Vidéo
      type: object
      required:
        - id
        - video_url
        - title
        - title_english
        - description
        - description_english
       
      properties:
        id:
          type: integer
          example: 4
        video_url:
          type: string
          format: url
          example: 'https://www.hotelArtichaud.com/video1'
        title:
          type: string
          example: Titre de ma vidéo
        title_english:
          type: string
          example: The title in english
        description:
          type: string
          example: La description de la vidéo
        description_english:
          type: string
          example: The description in english
        
          
  securitySchemes:
    password:
      type: oauth2
      flows:
        password:
          tokenUrl: 'http://example.com/oauth/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources